{{- if .Values.operator.enabled -}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "kubevisor.fullname" . }}-operator
  namespace: {{ .Release.Namespace }}
  labels:
    helm.sh/chart: {{ template "kubevisor.chart" . }}
    app.kubernetes.io/name: {{ template "kubevisor.name" . }}-operator
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: kubevisor
spec:
  serviceName: {{ include "kubevisor.fullname" . }}-operator
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kubevisor.name" . }}-operator
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kubevisor.name" . }}-operator
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: init-node-runtime
          image: "{{ .Values.operator.image.name }}:{{ .Values.operator.image.tag }}"
          imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
          volumeMounts:
            - name: node-runtime
              mountPath: /opt/kubevisor
          command:
            - /bin/bash
            - '-c'
            - |
              set -ex
              [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
              ordinal=${BASH_REMATCH[1]}
              echo "export KUBEVISOR_NAMESPACE=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)" > /opt/kubervisor/env
              if [[ $ordinal -eq 0 ]]; then
                echo "export KUBEVISOR_NODE_KIND=primary" >> /opt/kubevisor/env
              else
                echo "export KUBEVISOR_NODE_KIND=secondary" >> /opt/kubevisor/env
              fi
      containers:
        - name: node
          image: "{{ .Values.operator.image.name }}:{{ .Values.operator.image.tag }}"
          imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
          volumeMounts:
            - name: node-runtime
              mountPath: /opt/kubevisor
          command:
            - /bin/sh
            - '-c'
            - source /opt/kubevisor/env && yarn start
          env:
            - name: RABBITMQ_URL
              {{ .Values.operator.rabbitUrl | toYaml | nindent 14 }}
            - name: KUBEVISOR_REDIS_HOST
              {{ .Values.operator.redis.host | toYaml | nindent 14 }}
          envFrom:
            - configMapRef:
                name: {{ include "kubevisor.fullname" . }}-operator
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
      volumes:
        - name: node-runtime
          emptyDir:
            medium: Memory
{{- end -}}
